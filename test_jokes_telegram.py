#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –≤ Telegram –±–æ—Ç.
–≠—Ç–∞–ø 4: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ Telegram –±–æ—Ç.
"""

import sys
import os
from pathlib import Path
from datetime import datetime
import asyncio

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).resolve().parent))

def test_telegram_bot_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ Telegram –±–æ—Ç–∞."""
    print("üß™ –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ Telegram –±–æ—Ç–∞")
    try:
        from telegram_bot import ComicBotTelegram
        print("‚úÖ Telegram –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Telegram –±–æ—Ç–∞: {e}")
        return False

def test_bot_initialization():
    """–¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞."""
    print("\nüß™ –¢–µ—Å—Ç 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞")
    try:
        from telegram_bot import ComicBotTelegram
        
        bot = ComicBotTelegram()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ manager
        if hasattr(bot, 'manager'):
            print("‚úÖ Manager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        else:
            print("‚ùå Manager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ admin_chat_id
        if hasattr(bot, 'admin_chat_id'):
            print("‚úÖ Admin chat ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print("‚ùå Admin chat ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
        return False

def test_new_joke_methods():
    """–¢–µ—Å—Ç –Ω–∞–ª–∏—á–∏—è –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç 3: –ù–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    try:
        from telegram_bot import ComicBotTelegram
        
        bot = ComicBotTelegram()
        
        # –°–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
        joke_methods = [
            '_create_joke',
            '_regenerate_jokes',
            '_send_jokes_for_selection',
            '_select_joke',
            '_send_joke_for_approval',
            '_publish_joke_now',
            '_schedule_joke',
            '_approve_joke_publication'
        ]
        
        missing_methods = []
        for method_name in joke_methods:
            if hasattr(bot, method_name):
                print(f"‚úÖ –ú–µ—Ç–æ–¥ {method_name} –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"‚ùå –ú–µ—Ç–æ–¥ {method_name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                missing_methods.append(method_name)
        
        if not missing_methods:
            print("‚úÖ –í—Å–µ –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            return True
        else:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–µ—Ç–æ–¥—ã: {missing_methods}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–µ—Ç–æ–¥–æ–≤: {e}")
        return False

def test_start_command_updated():
    """–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã /start —Å –∫–Ω–æ–ø–∫–æ–π –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç 4: –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ /start")
    try:
        from telegram_bot import ComicBotTelegram
        
        bot = ComicBotTelegram()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥ start_command —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if hasattr(bot, 'start_command'):
            print("‚úÖ –ú–µ—Ç–æ–¥ start_command –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –ú–µ—Ç–æ–¥ start_command –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –º–µ—Ç–æ–¥–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
        import inspect
        source = inspect.getsource(bot.start_command)
        
        if "–°–æ–∑–¥–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç" in source:
            print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–°–æ–∑–¥–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç' –Ω–∞–π–¥–µ–Ω–∞ –≤ start_command")
        else:
            print("‚ùå –ö–Ω–æ–ø–∫–∞ '–°–æ–∑–¥–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ start_command")
            return False
        
        if "create_joke" in source:
            print("‚úÖ Callback 'create_joke' –Ω–∞–π–¥–µ–Ω –≤ start_command")
        else:
            print("‚ùå Callback 'create_joke' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ start_command")
            return False
        
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /start –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ start_command: {e}")
        return False

def test_button_callback_updated():
    """–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–Ω–æ–ø–æ–∫."""
    print("\nüß™ –¢–µ—Å—Ç 5: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫")
    try:
        from telegram_bot import ComicBotTelegram
        
        bot = ComicBotTelegram()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥ button_callback —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if hasattr(bot, 'button_callback'):
            print("‚úÖ –ú–µ—Ç–æ–¥ button_callback –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –ú–µ—Ç–æ–¥ button_callback –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –º–µ—Ç–æ–¥–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö callback'–æ–≤
        import inspect
        source = inspect.getsource(bot.button_callback)
        
        joke_callbacks = [
            'create_joke',
            'regenerate_jokes',
            'select_joke_',
            'publish_joke_now',
            'schedule_joke',
            'approve_joke_publication'
        ]
        
        missing_callbacks = []
        for callback in joke_callbacks:
            if callback in source:
                print(f"‚úÖ Callback '{callback}' –Ω–∞–π–¥–µ–Ω –≤ button_callback")
            else:
                print(f"‚ùå Callback '{callback}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ button_callback")
                missing_callbacks.append(callback)
        
        if not missing_callbacks:
            print("‚úÖ –í—Å–µ –Ω–æ–≤—ã–µ callback'—ã –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            return True
        else:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç callback'—ã: {missing_callbacks}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ button_callback: {e}")
        return False

def test_manager_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å manager –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç 6: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å manager –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    try:
        from telegram_bot import ComicBotTelegram
        from agents.manager import get_manager
        
        bot = ComicBotTelegram()
        manager = get_manager()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ manager –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
        joke_manager_methods = [
            'generate_jokes',
            'select_best_joke',
            'get_joke_by_author',
            'publish_joke',
            'run_joke_process'
        ]
        
        missing_methods = []
        for method_name in joke_manager_methods:
            if hasattr(manager, method_name):
                print(f"‚úÖ Manager –º–µ—Ç–æ–¥ {method_name} –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"‚ùå Manager –º–µ—Ç–æ–¥ {method_name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                missing_methods.append(method_name)
        
        if not missing_methods:
            print("‚úÖ –í—Å–µ –º–µ—Ç–æ–¥—ã manager –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        else:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–µ—Ç–æ–¥—ã manager: {missing_methods}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ manager –∏–º–µ–µ—Ç –∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
        joke_attributes = ['jokes', 'selected_joke', 'joke_publication_results']
        
        missing_attributes = []
        for attr_name in joke_attributes:
            if hasattr(manager, attr_name):
                print(f"‚úÖ Manager –∞—Ç—Ä–∏–±—É—Ç {attr_name} –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"‚ùå Manager –∞—Ç—Ä–∏–±—É—Ç {attr_name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                missing_attributes.append(attr_name)
        
        if not missing_attributes:
            print("‚úÖ –í—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã manager –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            return True
        else:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∞—Ç—Ä–∏–±—É—Ç—ã manager: {missing_attributes}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å manager: {e}")
        return False

def test_joke_workflow_simulation():
    """–¢–µ—Å—Ç —Å–∏–º—É–ª—è—Ü–∏–∏ workflow –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç 7: –°–∏–º—É–ª—è—Ü–∏—è workflow –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    try:
        from telegram_bot import ComicBotTelegram
        from agents.manager import get_manager
        
        bot = ComicBotTelegram()
        manager = get_manager()
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
        print("üîÑ –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤...")
        
        # –¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å
        test_news = {
            "title": "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è Telegram –±–æ—Ç–∞",
            "content": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ workflow –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –≤ Telegram –±–æ—Ç–µ"
        }
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ—Å—Ç—å –≤ manager
        manager.news = test_news
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
        results = manager.run_joke_process(news=test_news)
        
        if results.get("success"):
            print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —É—Å–ø–µ—à–µ–Ω")
        else:
            print("‚ùå –ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –Ω–µ —É–¥–∞–ª—Å—è")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–Ω–µ–∫–¥–æ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã
        if hasattr(manager, 'jokes') and manager.jokes:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(manager.jokes)} –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
        else:
            print("‚ùå –ê–Ω–µ–∫–¥–æ—Ç—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±–æ—Ä –ª—É—á—à–µ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞
        best_joke = manager.select_best_joke()
        if best_joke:
            print(f"‚úÖ –í—ã–±—Ä–∞–Ω –ª—É—á—à–∏–π –∞–Ω–µ–∫–¥–æ—Ç: {best_joke.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–∏–π –∞–Ω–µ–∫–¥–æ—Ç")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç–∞ –ø–æ –∞–≤—Ç–æ—Ä—É
        joke_by_author = manager.get_joke_by_author('A')
        if joke_by_author:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –∞–Ω–µ–∫–¥–æ—Ç –∞–≤—Ç–æ—Ä–∞ A: {joke_by_author.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç –∞–≤—Ç–æ—Ä–∞ A")
            return False
        
        print("‚úÖ –°–∏–º—É–ª—è—Ü–∏—è workflow –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–º—É–ª—è—Ü–∏–∏ workflow: {e}")
        return False

def test_publishing_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç 8: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    try:
        from telegram_bot import ComicBotTelegram
        from agents.manager import get_manager
        from tools.publishing_tools import publish_joke_to_all_platforms
        
        bot = ComicBotTelegram()
        manager = get_manager()
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç
        test_joke = {
            "joke_id": "TELEGRAM_TEST_20250630002316",
            "writer_type": "A",
            "writer_name": "–î–æ–±—Ä—è–∫ –ü–µ—Ç—Ä–æ–≤–∏—á",
            "title": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç –¥–ª—è Telegram",
            "content": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram –±–æ—Ç–µ",
            "created_at": datetime.now().isoformat()
        }
        
        test_news_title = "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        publication_result = publish_joke_to_all_platforms(test_joke, test_news_title)
        
        if publication_result and publication_result.get("success"):
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   Joke ID: {publication_result.get('joke_id')}")
            print(f"   –ê–≤—Ç–æ—Ä: {publication_result.get('author_name')}")
        else:
            print("‚ùå –§—É–Ω–∫—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å manager
        manager.news = {"title": test_news_title}
        manager.selected_joke = test_joke
        
        manager_result = manager.publish_joke()
        
        if manager_result and manager_result.get("success"):
            print("‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ manager —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ manager –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
        
        print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
        return False

def test_compatibility_with_comics():
    """–¢–µ—Å—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∫–æ–º–∏–∫—Å–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç 9: –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∫–æ–º–∏–∫—Å–æ–≤")
    try:
        from telegram_bot import ComicBotTelegram
        
        bot = ComicBotTelegram()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ä—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–æ–º–∏–∫—Å–æ–≤ –æ—Å—Ç–∞–ª–∏—Å—å
        comic_methods = [
            '_continue_with_scripts',
            '_continue_with_image',
            '_send_news_for_approval',
            '_send_script_result',
            '_send_image_result',
            '_regenerate_news',
            '_regenerate_scripts',
            '_regenerate_image',
            '_approve_publication',
            '_run_full_automatic_process'
        ]
        
        missing_methods = []
        for method_name in comic_methods:
            if hasattr(bot, method_name):
                print(f"‚úÖ –°—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ {method_name} —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
            else:
                print(f"‚ùå –°—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ {method_name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                missing_methods.append(method_name)
        
        if not missing_methods:
            print("‚úÖ –í—Å–µ —Å—Ç–∞—Ä—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–æ–º–∏–∫—Å–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        else:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–∞—Ä—ã–µ –º–µ—Ç–æ–¥—ã: {missing_methods}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ä—ã–µ callback'—ã –æ—Å—Ç–∞–ª–∏—Å—å
        import inspect
        source = inspect.getsource(bot.button_callback)
        
        comic_callbacks = [
            'manual_start',
            'regenerate_news',
            'continue_with_news',
            'regenerate_scripts',
            'continue_with_script',
            'regenerate_image',
            'approve_publication'
        ]
        
        missing_callbacks = []
        for callback in comic_callbacks:
            if callback in source:
                print(f"‚úÖ –°—Ç–∞—Ä—ã–π callback '{callback}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
            else:
                print(f"‚ùå –°—Ç–∞—Ä—ã–π callback '{callback}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                missing_callbacks.append(callback)
        
        if not missing_callbacks:
            print("‚úÖ –í—Å–µ —Å—Ç–∞—Ä—ã–µ callback'—ã –¥–ª—è –∫–æ–º–∏–∫—Å–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
            return True
        else:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–∞—Ä—ã–µ callback'—ã: {missing_callbacks}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏: {e}")
        return False

def test_environment_variables():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç 10: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        joke_hour = int(os.getenv("JOKE_PUBLICATION_HOUR", "14"))
        joke_minute = int(os.getenv("JOKE_PUBLICATION_MINUTE", "0"))
        
        print(f"‚úÖ JOKE_PUBLICATION_HOUR: {joke_hour}")
        print(f"‚úÖ JOKE_PUBLICATION_MINUTE: {joke_minute}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–∑—É–º–Ω—ã–µ
        if 0 <= joke_hour <= 23:
            print("‚úÖ JOKE_PUBLICATION_HOUR –≤ –¥–æ–ø—É—Å—Ç–∏–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ")
        else:
            print("‚ùå JOKE_PUBLICATION_HOUR –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
            return False
        
        if 0 <= joke_minute <= 59:
            print("‚úÖ JOKE_PUBLICATION_MINUTE –≤ –¥–æ–ø—É—Å—Ç–∏–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ")
        else:
            print("‚ùå JOKE_PUBLICATION_MINUTE –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
            return False
        
        print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –≤ Telegram –±–æ—Ç")
    print("=" * 60)
    
    tests = [
        test_telegram_bot_import,
        test_bot_initialization,
        test_new_joke_methods,
        test_start_command_updated,
        test_button_callback_updated,
        test_manager_integration,
        test_joke_workflow_simulation,
        test_publishing_integration,
        test_compatibility_with_comics,
        test_environment_variables
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        try:
            if test():
                passed += 1
            else:
                print("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω")
        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: {e}")
    
    print("\n" + "=" * 60)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –≤ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        print("\n‚úÖ –≠—Ç–∞–ø 4 –∑–∞–≤–µ—Ä—à–µ–Ω. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –≠—Ç–∞–ø—É 4.5 (–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ GPT Assistants).")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏.")
    
    return passed == total

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
