#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤.
–≠—Ç–∞–ø 1: –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞.
"""

import sys
import os
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).resolve().parent))

def test_joke_writer_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è joke_writer."""
    print("üß™ –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è joke_writer")
    try:
        from agents.joke_writer import JokeWriterAgent, get_joke_writer
        print("‚úÖ –ú–æ–¥—É–ª—å joke_writer —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ joke_writer: {e}")
        return False

def test_storage_functions():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç 2: –§—É–Ω–∫—Ü–∏–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    try:
        from tools.storage_tools import store_joke, store_jokes, load_jokes
        print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π —Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return False

def test_assistants_api_functions():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π assistants_api –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç 3: –§—É–Ω–∫—Ü–∏–∏ assistants_api –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    try:
        from utils.assistants_api import invoke_joke_writer
        print("‚úÖ –§—É–Ω–∫—Ü–∏—è invoke_joke_writer —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π assistants_api: {e}")
        return False

def test_joke_writer_initialization():
    """–¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ JokeWriterAgent."""
    print("\nüß™ –¢–µ—Å—Ç 4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è JokeWriterAgent")
    try:
        from agents.joke_writer import JokeWriterAgent
        agent = JokeWriterAgent()
        print(f"‚úÖ JokeWriterAgent —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print(f"   - news: {agent.news}")
        print(f"   - jokes: {len(agent.jokes)} –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
        print(f"   - selected_joke: {agent.selected_joke}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ JokeWriterAgent: {e}")
        return False

def test_joke_storage():
    """–¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç 5: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    try:
        from tools.storage_tools import store_joke, load_jokes
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç
        test_joke = {
            "joke_id": "TEST_20250630000000",
            "writer_type": "A",
            "writer_name": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–≤—Ç–æ—Ä",
            "title": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç",
            "content": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.",
            "news": {
                "title": "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å",
                "content": "–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –Ω–æ–≤–æ—Å—Ç–∏"
            },
            "created_at": datetime.now().isoformat()
        }
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–µ–∫–¥–æ—Ç
        success = store_joke(test_joke)
        if not success:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç")
            return False
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–Ω–µ–∫–¥–æ—Ç—ã
        jokes = load_jokes()
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(jokes)} –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—à –∞–Ω–µ–∫–¥–æ—Ç –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ
        found = False
        for joke in jokes:
            if joke.get("joke_id") == "TEST_20250630000000":
                found = True
                print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç –Ω–∞–π–¥–µ–Ω: {joke.get('title')}")
                break
        
        if not found:
            print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return False

def test_joke_generation_with_stub():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —Å –∑–∞–≥–ª—É—à–∫–æ–π."""
    print("\nüß™ –¢–µ—Å—Ç 6: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —Å –∑–∞–≥–ª—É—à–∫–æ–π")
    try:
        from agents.joke_writer import JokeWriterAgent
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –Ω–æ–≤–æ—Å—Ç—å
        test_news = {
            "title": "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–∞",
            "content": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤. –í –Ω–µ–π –Ω–µ—Ç –Ω–∏—á–µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ, –Ω–æ –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç—å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–º–µ—à–Ω–æ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞."
        }
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞
        agent = JokeWriterAgent()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–µ–∫–¥–æ—Ç—ã
        print("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–µ–∫–¥–æ—Ç—ã...")
        jokes = agent.generate_jokes(test_news)
        
        if not jokes:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç—ã")
            return False
        
        print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(jokes)} –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∞–Ω–µ–∫–¥–æ—Ç
        for i, joke in enumerate(jokes):
            print(f"   –ê–Ω–µ–∫–¥–æ—Ç {i+1}:")
            print(f"     - ID: {joke.get('joke_id', '–ù–µ—Ç ID')}")
            print(f"     - –ê–≤—Ç–æ—Ä: {joke.get('writer_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')}")
            print(f"     - –ó–∞–≥–æ–ª–æ–≤–æ–∫: {joke.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
            print(f"     - –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {joke.get('content', '–ù–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è')[:100]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –ª—É—á—à–µ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞
        best_joke = agent.select_best_joke()
        if best_joke:
            print(f"‚úÖ –í—ã–±—Ä–∞–Ω –ª—É—á—à–∏–π –∞–Ω–µ–∫–¥–æ—Ç: {best_joke.get('title')}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–∏–π –∞–Ω–µ–∫–¥–æ—Ç")
            return False
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤: {e}")
        return False

def test_joke_writer_by_author():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞."""
    print("\nüß™ –¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç–∞ –ø–æ –∞–≤—Ç–æ—Ä—É")
    try:
        from agents.joke_writer import JokeWriterAgent
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –Ω–æ–≤–æ—Å—Ç—å
        test_news = {
            "title": "–ù–æ–≤–æ—Å—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∞ –∞–≤—Ç–æ—Ä–æ–≤",
            "content": "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –ø–æ –∞–≤—Ç–æ—Ä–∞–º."
        }
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–µ–∫–¥–æ—Ç—ã
        agent = JokeWriterAgent()
        jokes = agent.generate_jokes(test_news)
        
        if not jokes:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∞")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç–∞ –ø–æ –∞–≤—Ç–æ—Ä—É
        for author_type in ["A", "B", "C", "D", "E"]:
            joke = agent.get_joke_by_author(author_type)
            if joke:
                print(f"‚úÖ –ê–Ω–µ–∫–¥–æ—Ç –∞–≤—Ç–æ—Ä–∞ {author_type}: {joke.get('title')}")
            else:
                print(f"‚ö†Ô∏è –ê–Ω–µ–∫–¥–æ—Ç –∞–≤—Ç–æ—Ä–∞ {author_type} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ –∞–≤—Ç–æ—Ä—É: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    print("=" * 60)
    
    tests = [
        test_joke_writer_import,
        test_storage_functions,
        test_assistants_api_functions,
        test_joke_writer_initialization,
        test_joke_storage,
        test_joke_generation_with_stub,
        test_joke_writer_by_author
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        try:
            if test():
                passed += 1
            else:
                print("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω")
        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: {e}")
    
    print("\n" + "=" * 60)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        print("\n‚úÖ –≠—Ç–∞–ø 1 –∑–∞–≤–µ—Ä—à–µ–Ω. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –≠—Ç–∞–ø—É 2.")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏.")
    
    return passed == total

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
