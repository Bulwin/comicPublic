#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–æ–ø-4 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Å—å —Ü–∏–∫–ª: –Ω–æ–≤–æ—Å—Ç—å ‚Üí 5 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ ‚Üí –æ—Ü–µ–Ω–∫–∞ –∂—é—Ä–∏ ‚Üí –≤—ã–±–æ—Ä —Ç–æ–ø-4.
"""

import sys
import os
import json
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).resolve().parent))

from tools.news_tools import get_top_news
from agents.manager import ManagerAgent
from utils.logger import info, error, warning
from config import SCRIPTWRITERS

def test_top4_selection():
    """–¢–µ—Å—Ç –≤—ã–±–æ—Ä–∞ —Ç–æ–ø-4 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π."""
    
    print("=" * 80)
    print("–¢–ï–°–¢ –í–´–ë–û–†–ê –¢–û–ü-4 –°–¶–ï–ù–ê–†–ò–ï–í –î–õ–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô")
    print("=" * 80)
    
    # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
    print("üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏...")
    try:
        news = get_top_news()
        if not news:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å")
            return False
        
        print(f"‚úÖ –ù–æ–≤–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∞: {news.get('title', '')[:50]}...")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏: {e}")
        return False
    
    # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    print(f"\nü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–æ–º–∏–∫—Å–æ–≤...")
    try:
        manager = ManagerAgent()
        print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {e}")
        return False
    
    # 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏ –≤ –º–µ–Ω–µ–¥–∂–µ—Ä
    manager.news = news
    
    # 4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ—Ö 5 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    print(f"\nüìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ—Ö 5 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...")
    try:
        print("–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...")
        scripts = manager.generate_scripts()
        
        if not scripts:
            print("‚ùå –°—Ü–µ–Ω–∞—Ä–∏–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã")
            return False
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(scripts)} —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:")
        for i, script in enumerate(scripts):
            writer_name = script.get('writer_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
            title = script.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
            print(f"   {i+1}. {writer_name}: {title[:50]}...")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: {e}")
        return False
    
    # 5. –û—Ü–µ–Ω–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∂—é—Ä–∏
    print(f"\n‚öñÔ∏è –û—Ü–µ–Ω–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∂—é—Ä–∏...")
    try:
        print("–ó–∞–ø—É—Å–∫ –æ—Ü–µ–Ω–∫–∏ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...")
        evaluations = manager.evaluate_scripts()
        
        if not evaluations:
            print("‚ùå –û—Ü–µ–Ω–∫–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
            return False
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –æ—Ü–µ–Ω–∫–∏ –¥–ª—è {len(evaluations)} —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ü–µ–Ω–∫–∏
        for script_id, eval_data in evaluations.items():
            script = next((s for s in scripts if s.get('script_id') == script_id), None)
            if script:
                writer_name = script.get('writer_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
                avg_score = eval_data.get('average_score', 0)
                print(f"   {writer_name}: {avg_score:.1f}/100")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ü–µ–Ω–∫–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: {e}")
        return False
    
    # 5. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–ø-4 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    print(f"\nüèÜ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–ø-4 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...")
    try:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø–æ —Å—Ä–µ–¥–Ω–µ–π –æ—Ü–µ–Ω–∫–µ
        sorted_scripts = []
        for script in scripts:
            script_id = script.get('script_id')
            if script_id in evaluations:
                avg_score = evaluations[script_id].get('average_score', 0)
                sorted_scripts.append((script, avg_score))
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é –æ—Ü–µ–Ω–∫–∏
        sorted_scripts.sort(key=lambda x: x[1], reverse=True)
        
        # –ë–µ—Ä–µ–º —Ç–æ–ø-4
        top4_scripts = [script for script, score in sorted_scripts[:4]]
        
        print(f"‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Ç–æ–ø-4 —Å—Ü–µ–Ω–∞—Ä–∏—è:")
        for i, (script, score) in enumerate(sorted_scripts[:4]):
            writer_name = script.get('writer_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
            title = script.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
            print(f"   {i+1}. {writer_name}: {score:.1f}/100 - {title[:40]}...")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫—Ç–æ –Ω–µ –ø–æ–ø–∞–ª –≤ —Ç–æ–ø-4
        if len(sorted_scripts) > 4:
            print(f"\n‚ùå –ù–µ –ø–æ–ø–∞–ª–∏ –≤ —Ç–æ–ø-4:")
            for i, (script, score) in enumerate(sorted_scripts[4:]):
                writer_name = script.get('writer_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
                title = script.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
                print(f"   {i+5}. {writer_name}: {score:.1f}/100 - {title[:40]}...")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ç–æ–ø-4: {e}")
        return False
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏)
    print(f"\nüñºÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    try:
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É manager.generate_images()
        print("–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
        
        # –ü–æ–ª—É—á–∞–µ–º ID —Ç–æ–ø-4 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
        top4_ids = [script.get('script_id') for script in top4_scripts]
        
        print(f"‚úÖ –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã {len(top4_ids)} —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:")
        for i, script_id in enumerate(top4_ids):
            script = next((s for s in scripts if s.get('script_id') == script_id), None)
            if script:
                writer_name = script.get('writer_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
                title = script.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
                print(f"   {i+1}. ID: {script_id} - {writer_name}: {title[:40]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –æ—Å—Ç–∞–ª—å–Ω—ã–µ
        all_ids = [script.get('script_id') for script in scripts]
        excluded_ids = [sid for sid in all_ids if sid not in top4_ids]
        
        if excluded_ids:
            print(f"\n‚úÖ –ù–ï –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:")
            for script_id in excluded_ids:
                script = next((s for s in scripts if s.get('script_id') == script_id), None)
                if script:
                    writer_name = script.get('writer_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
                    title = script.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
                    print(f"   - ID: {script_id} - {writer_name}: {title[:40]}...")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ª–æ–≥–∏–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    # 7. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞...")
    
    test_result = {
        "timestamp": datetime.now().isoformat(),
        "test_type": "top4_selection",
        "news": {
            "title": news.get("title", ""),
            "content": news.get("content", "")[:200] + "..." if len(news.get("content", "")) > 200 else news.get("content", "")
        },
        "total_scripts": len(scripts),
        "scripts_with_evaluations": len(evaluations),
        "top4_selection": [
            {
                "rank": i+1,
                "script_id": script.get('script_id'),
                "writer_name": script.get('writer_name'),
                "title": script.get('title'),
                "average_score": score
            }
            for i, (script, score) in enumerate(sorted_scripts[:4])
        ],
        "excluded_scripts": [
            {
                "rank": i+5,
                "script_id": script.get('script_id'),
                "writer_name": script.get('writer_name'),
                "title": script.get('title'),
                "average_score": score
            }
            for i, (script, score) in enumerate(sorted_scripts[4:])
        ],
        "validation": {
            "correct_script_count": len(scripts) == 10,
            "all_scripts_evaluated": len(evaluations) == len(scripts),
            "top4_selected": len(top4_scripts) == 4,
            "success": len(scripts) == 10 and len(evaluations) == len(scripts) and len(top4_scripts) == 4
        }
    }
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    results_dir = Path("data/test_results")
    results_dir.mkdir(parents=True, exist_ok=True)
    
    result_file = results_dir / "test_top4_selection.json"
    
    try:
        with open(result_file, "w", encoding="utf-8") as f:
            json.dump(test_result, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {result_file}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")
        return False
    
    # 8. –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"\n" + "=" * 80)
    if test_result["validation"]["success"]:
        print("üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!")
        print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(scripts)} —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ (–ø–æ 2 –æ—Ç –∫–∞–∂–¥–æ–≥–æ –∏–∑ 5 —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç–æ–≤)")
        print(f"   ‚úÖ –í—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –æ—Ü–µ–Ω–µ–Ω—ã –∂—é—Ä–∏")
        print(f"   ‚úÖ –í—ã–±—Ä–∞–Ω—ã —Ç–æ–ø-4 —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        print(f"   ‚úÖ –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù")
        if not test_result["validation"]["correct_script_count"]:
            print(f"   ‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: {len(scripts)} (–æ–∂–∏–¥–∞–µ—Ç—Å—è 10)")
        if not test_result["validation"]["all_scripts_evaluated"]:
            print(f"   ‚ùå –ù–µ –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –æ—Ü–µ–Ω–µ–Ω—ã: {len(evaluations)}/{len(scripts)}")
        if not test_result["validation"]["top4_selected"]:
            print(f"   ‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ø-—Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: {len(top4_scripts)} (–æ–∂–∏–¥–∞–µ—Ç—Å—è 4)")
    
    print("=" * 80)
    
    return test_result["validation"]["success"]

if __name__ == "__main__":
    success = test_top4_selection()
    sys.exit(0 if success else 1)
