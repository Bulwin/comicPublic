#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤.
–≠—Ç–∞–ø 3: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤.
"""

import sys
import os
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).resolve().parent))

def test_publishing_tools_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤."""
    print("üß™ –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    try:
        from tools.publishing_tools import (
            format_joke_caption,
            publish_joke_to_channel,
            publish_joke_complete,
            publish_joke_to_all_platforms
        )
        print("‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
        return False

def test_format_joke_caption():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–∞."""
    print("\nüß™ –¢–µ—Å—Ç 2: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–∞")
    try:
        from tools.publishing_tools import format_joke_caption
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        joke_text = "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç –ø—Ä–æ –Ω–æ–≤–æ—Å—Ç—å –¥–Ω—è. –û—á–µ–Ω—å —Å–º–µ—à–Ω–æ–π –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π!"
        news_title = "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
        author_name = "–î–æ–±—Ä—è–∫ –ü–µ—Ç—Ä–æ–≤–∏—á"
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å
        caption = format_joke_caption(joke_text, news_title, author_name)
        
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞:")
        print(f"   –î–ª–∏–Ω–∞: {len(caption)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç –¥–∞—Ç—É: {'‚úÖ' if datetime.now().strftime('%d.%m.%Y') in caption else '‚ùå'}")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç —ç–º–æ–¥–∑–∏: {'‚úÖ' if 'üé≠' in caption else '‚ùå'}")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–≤–æ—Å—Ç—å: {'‚úÖ' if news_title in caption else '‚ùå'}")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç –∞–Ω–µ–∫–¥–æ—Ç: {'‚úÖ' if joke_text in caption else '‚ùå'}")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç –∞–≤—Ç–æ—Ä–∞: {'‚úÖ' if author_name in caption else '‚ùå'}")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç —Ö–µ—à—Ç–µ–≥–∏: {'‚úÖ' if '#DailyComicBot' in caption else '‚ùå'}")
        
        print(f"\nüìù –ü—Ä–∏–º–µ—Ä –ø–æ–¥–ø–∏—Å–∏:")
        print(f"   {caption[:200]}...")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∏: {e}")
        return False

def test_format_joke_caption_long():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª–∏–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏ —Å –æ–±—Ä–µ–∑–∞–Ω–∏–µ–º."""
    print("\nüß™ –¢–µ—Å—Ç 3: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏ —Å –æ–±—Ä–µ–∑–∞–Ω–∏–µ–º")
    try:
        from tools.publishing_tools import format_joke_caption
        
        # –û—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        joke_text = "–≠—Ç–æ –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç " * 50  # ~1500 —Å–∏–º–≤–æ–ª–æ–≤
        news_title = "–û—á–µ–Ω—å –¥–ª–∏–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å " * 20  # ~400 —Å–∏–º–≤–æ–ª–æ–≤
        author_name = "–î–æ–±—Ä—è–∫ –ü–µ—Ç—Ä–æ–≤–∏—á"
        max_length = 1000
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º
        caption = format_joke_caption(joke_text, news_title, author_name, max_length)
        
        print(f"‚úÖ –î–ª–∏–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞:")
        print(f"   –î–ª–∏–Ω–∞: {len(caption)} —Å–∏–º–≤–æ–ª–æ–≤ (–ª–∏–º–∏—Ç: {max_length})")
        print(f"   –û–±—Ä–µ–∑–∞–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: {'‚úÖ' if len(caption) <= max_length else '‚ùå'}")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç '...': {'‚úÖ' if '...' in caption else '‚ùå'}")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç –∞–≤—Ç–æ—Ä–∞: {'‚úÖ' if author_name in caption else '‚ùå'}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–ª–∏–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏: {e}")
        return False

def test_publish_joke_to_channel():
    """–¢–µ—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª."""
    print("\nüß™ –¢–µ—Å—Ç 4: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª")
    try:
        from tools.publishing_tools import publish_joke_to_channel
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        joke_text = "–¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª"
        news_title = "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å"
        author_name = "–ú—Ä–∞—á–Ω—ã–π –≠–¥–≥–∞—Ä"
        
        # –ü—É–±–ª–∏–∫—É–µ–º –∞–Ω–µ–∫–¥–æ—Ç (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞)
        result = publish_joke_to_channel(joke_text, news_title, author_name)
        
        if result and result.get("success"):
            print("‚úÖ –ê–Ω–µ–∫–¥–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª")
            print(f"   Channel ID: {result.get('channel_id')}")
            print(f"   Message ID: {result.get('message_id')}")
            print(f"   –î–∞—Ç–∞: {result.get('date')}")
            print(f"   –ê–≤—Ç–æ—Ä: {result.get('author_name')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            required_fields = ['success', 'channel_id', 'message_id', 'date', 'caption', 'joke_text', 'news_title', 'author_name']
            missing_fields = [field for field in required_fields if field not in result]
            
            if not missing_fields:
                print("‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ")
            else:
                print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}")
                return False
            
            return True
        else:
            print(f"‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: {result}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª: {e}")
        return False

def test_publish_joke_complete():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–∞."""
    print("\nüß™ –¢–µ—Å—Ç 5: –ü–æ–ª–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞")
    try:
        from tools.publishing_tools import publish_joke_complete
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç
        joke = {
            "joke_id": "TEST_20250630001800",
            "writer_type": "C",
            "writer_name": "–ë—É–Ω—Ç–∞—Ä—å –ú–∞–∫—Å",
            "title": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–Ω–µ–∫–¥–æ—Ç–∞",
            "content": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –û—á–µ–Ω—å —Å–º–µ—à–Ω–æ–π!",
            "news": {
                "title": "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å",
                "content": "–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –Ω–æ–≤–æ—Å—Ç–∏"
            },
            "created_at": datetime.now().isoformat()
        }
        
        news_title = "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –ø–æ–ª–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
        
        # –ü—É–±–ª–∏–∫—É–µ–º –∞–Ω–µ–∫–¥–æ—Ç
        result = publish_joke_complete(joke, news_title)
        
        if result and result.get("success"):
            print("‚úÖ –ü–æ–ª–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞ —É—Å–ø–µ—à–Ω–∞")
            print(f"   Joke ID: {result.get('joke_id')}")
            print(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {result.get('joke_title')}")
            print(f"   Message ID: {result.get('message_id')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω –∫ —Ç–µ–∫—Å—Ç—É
            caption = result.get('caption', '')
            if joke['title'] in caption and joke['content'] in caption:
                print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã")
            else:
                print("‚ùå –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –Ω–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                return False
            
            return True
        else:
            print(f"‚ùå –ü–æ–ª–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: {result}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
        return False

def test_publish_joke_to_all_platforms():
    """–¢–µ—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–∞ –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö."""
    print("\nüß™ –¢–µ—Å—Ç 6: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞ –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö")
    try:
        from tools.publishing_tools import publish_joke_to_all_platforms
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç
        joke = {
            "joke_id": "TEST_20250630001801",
            "writer_type": "A",
            "writer_name": "–î–æ–±—Ä—è–∫ –ü–µ—Ç—Ä–æ–≤–∏—á",
            "title": "–ê–Ω–µ–∫–¥–æ—Ç –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º",
            "content": "–≠—Ç–æ—Ç –∞–Ω–µ–∫–¥–æ—Ç –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –Ω–∞ –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö!",
            "news": {
                "title": "–ù–æ–≤–æ—Å—Ç—å –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º",
                "content": "–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏"
            },
            "created_at": datetime.now().isoformat()
        }
        
        news_title = "–ù–æ–≤–æ—Å—Ç—å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö"
        
        # –ü—É–±–ª–∏–∫—É–µ–º –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö
        result = publish_joke_to_all_platforms(joke, news_title)
        
        if result:
            print("‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            print(f"   –û–±—â–∏–π —É—Å–ø–µ—Ö: {result.get('success')}")
            print(f"   Joke ID: {result.get('joke_id')}")
            print(f"   –ê–≤—Ç–æ—Ä: {result.get('author_name')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
            platforms = result.get('platforms', {})
            
            # Telegram –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å–ø–µ—à–Ω—ã–º
            telegram_result = platforms.get('telegram', {})
            if telegram_result.get('success'):
                print("‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram —É—Å–ø–µ—à–Ω–∞")
            else:
                print(f"‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram –Ω–µ —É–¥–∞–ª–∞—Å—å: {telegram_result}")
                return False
            
            # Instagram –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω (–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤)
            instagram_result = platforms.get('instagram', {})
            if not instagram_result.get('success') and '–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' in instagram_result.get('error', ''):
                print("‚úÖ Instagram –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
            else:
                print("‚ö†Ô∏è Instagram –æ–±—Ä–∞–±–æ—Ç–∞–Ω –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ")
            
            return True
        else:
            print(f"‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –Ω–µ —É–¥–∞–ª–∞—Å—å: {result}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö: {e}")
        return False

def test_manager_publish_joke():
    """–¢–µ—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–∞ —á–µ—Ä–µ–∑ manager."""
    print("\nüß™ –¢–µ—Å—Ç 7: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞ —á–µ—Ä–µ–∑ manager")
    try:
        from agents.manager import ManagerAgent
        
        manager = ManagerAgent()
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –Ω–æ–≤–æ—Å—Ç—å
        manager.news = {
            "title": "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è manager",
            "content": "–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ manager"
        }
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–Ω–µ–∫–¥–æ—Ç
        test_joke = {
            "joke_id": "MANAGER_TEST_20250630001802",
            "writer_type": "D",
            "writer_name": "–•–∏–ø—Å—Ç–µ—Ä –ê—Ä—Ç–µ–º–∏–π",
            "title": "–ê–Ω–µ–∫–¥–æ—Ç —á–µ—Ä–µ–∑ manager",
            "content": "–≠—Ç–æ—Ç –∞–Ω–µ–∫–¥–æ—Ç –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ manager –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
            "created_at": datetime.now().isoformat()
        }
        
        # –ü—É–±–ª–∏–∫—É–µ–º —á–µ—Ä–µ–∑ manager
        result = manager.publish_joke(test_joke)
        
        if result and result.get("success"):
            print("‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ manager —É—Å–ø–µ—à–Ω–∞")
            print(f"   Joke ID: {result.get('joke_id')}")
            print(f"   –ê–≤—Ç–æ—Ä: {result.get('author_name')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è –≤ manager
            if manager.joke_publication_results == result:
                print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ manager")
            else:
                print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ manager")
                return False
            
            return True
        else:
            print(f"‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ manager –Ω–µ —É–¥–∞–ª–∞—Å—å: {result}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ manager: {e}")
        return False

def test_manager_full_joke_process_with_publishing():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ manager."""
    print("\nüß™ –¢–µ—Å—Ç 8: –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ manager")
    try:
        from agents.manager import ManagerAgent
        
        manager = ManagerAgent()
        
        # –¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å
        test_news = {
            "title": "–ù–æ–≤–æ—Å—Ç—å –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π",
            "content": "–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤"
        }
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
        print("üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤...")
        results = manager.run_joke_process(news=test_news)
        
        if not results.get("success"):
            print("‚ùå –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –Ω–µ —É–¥–∞–ª—Å—è")
            return False
        
        print("‚úÖ –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç
        if not manager.selected_joke:
            print("‚ùå –ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
            return False
        
        print(f"‚úÖ –í—ã–±—Ä–∞–Ω –∞–Ω–µ–∫–¥–æ—Ç: {manager.selected_joke.get('title')}")
        
        # –ü—É–±–ª–∏–∫—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç
        print("üîÑ –ü—É–±–ª–∏–∫—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç...")
        publication_result = manager.publish_joke()
        
        if publication_result and publication_result.get("success"):
            print("‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞ —É—Å–ø–µ—à–Ω–∞")
            print(f"   –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∞–Ω–µ–∫–¥–æ—Ç: {publication_result.get('joke_title')}")
            print(f"   –ê–≤—Ç–æ—Ä: {publication_result.get('author_name')}")
            
            return True
        else:
            print(f"‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å: {publication_result}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π: {e}")
        return False

def test_compatibility_with_comics():
    """–¢–µ—Å—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —Å –∫–æ–º–∏–∫—Å–∞–º–∏."""
    print("\nüß™ –¢–µ—Å—Ç 9: –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —Å –∫–æ–º–∏–∫—Å–∞–º–∏")
    try:
        from tools.publishing_tools import (
            # –°—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ–º–∏–∫—Å–æ–≤
            post_to_telegram, publish_to_all_platforms, format_caption,
            # –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
            publish_joke_to_channel, format_joke_caption
        )
        
        print("‚úÖ –°—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ–º–∏–∫—Å–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã:")
        print("   - post_to_telegram")
        print("   - publish_to_all_platforms") 
        print("   - format_caption")
        
        print("‚úÖ –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã:")
        print("   - publish_joke_to_channel")
        print("   - format_joke_caption")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—Ç
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å –¥–ª—è –∫–æ–º–∏–∫—Å–∞
        comic_caption = format_caption("–ù–æ–≤–æ—Å—Ç—å", "–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∫–æ–º–∏–∫—Å–∞", 85.5)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–∞
        joke_caption = format_joke_caption("–¢–µ–∫—Å—Ç –∞–Ω–µ–∫–¥–æ—Ç–∞", "–ù–æ–≤–æ—Å—Ç—å", "–ê–≤—Ç–æ—Ä")
        
        if comic_caption != joke_caption:
            print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—Ç")
        else:
            print("‚ùå –§—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            return False
        
        print("‚úÖ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –∫–æ–º–∏–∫—Å–∞–º–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤")
    print("=" * 60)
    
    tests = [
        test_publishing_tools_import,
        test_format_joke_caption,
        test_format_joke_caption_long,
        test_publish_joke_to_channel,
        test_publish_joke_complete,
        test_publish_joke_to_all_platforms,
        test_manager_publish_joke,
        test_manager_full_joke_process_with_publishing,
        test_compatibility_with_comics
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        try:
            if test():
                passed += 1
            else:
                print("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω")
        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: {e}")
    
    print("\n" + "=" * 60)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        print("\n‚úÖ –≠—Ç–∞–ø 3 –∑–∞–≤–µ—Ä—à–µ–Ω. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –≠—Ç–∞–ø—É 4.")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏.")
    
    return passed == total

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
